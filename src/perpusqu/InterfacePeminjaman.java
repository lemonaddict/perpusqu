/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpusqu;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.DriverManager;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;

// Abstract class for database connection
abstract class DatabaseConnection {
    static final String DB_URL = "jdbc:mysql://localhost:3306/perpusqu";
    static final String user = "root";
    static final String password = "";

    // Abstract method for getting a database connection
    abstract Connection getConnection() throws SQLException;
}

// Class that extends the abstract class and implements the getConnection method
class DatabaseConnector extends DatabaseConnection {
    @Override
    Connection getConnection() throws SQLException {
        return DriverManager.getConnection(DB_URL, user, password);
    }
}

public class InterfacePeminjaman extends javax.swing.JFrame {
   
    static final String query = "SELECT * FROM buku";
    private final DatabaseConnection dbConnection = new DatabaseConnector();
    DefaultTableModel model;
    
    String unama;
    String unim;
    public void setUserInfo(String nama, String nim) {
        
        this.unama = nama;
        this.unim = nim;
        TF_nama.setText(unama);
        TF_NIM.setText(unim);
    }
    
    
    public InterfacePeminjaman() {
        initComponents();
       
        
        model = (DefaultTableModel) TB_pinjam.getModel();

        // Display data from the "buku" table
        displayData();
        
        TB_pinjam.addMouseListener(new java.awt.event.MouseAdapter() {
    @Override
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int row = TB_pinjam.rowAtPoint(evt.getPoint());
        // Assuming Judul is in the first column (index 0)
        String judul = TB_pinjam.getValueAt(row, 0).toString();
        // Assuming Penulis is in the second column (index 1)
        String penulis = TB_pinjam.getValueAt(row, 1).toString();
        // Assuming Jumlah Buku is in the third column (index 2)
        int jumlahBuku = Integer.parseInt(TB_pinjam.getValueAt(row, 2).toString());
        // Assuming Status is in the fourth column (index 3)
        String status = TB_pinjam.getValueAt(row, 3).toString();

        // Set the values in the corresponding text fields
        TF_judul.setText(judul);
        
    }
});

    }
    
    private void displayData() {
        // Clear the existing data in the table
        model.setRowCount(0);

        try (
            Connection conn = dbConnection.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);
        ) {
            while (rs.next()) {
                // Add data to the table model
                model.addRow(new Object[]{
                    rs.getString("Judul"),
                    rs.getString("Penulis"),
                    rs.getInt("JumlahBuku"),
                    rs.getString("Status")
                });
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TF_nama = new javax.swing.JTextField();
        TF_NIM = new javax.swing.JTextField();
        TF_judul = new javax.swing.JTextField();
        btnPinjam = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TB_pinjam = new javax.swing.JTable();
        gotomenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("PEMINJAMAN");

        jLabel2.setText("Nama");

        jLabel3.setText("NIM");

        jLabel4.setText("Nama Buku");

        TF_nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_namaActionPerformed(evt);
            }
        });

        TF_NIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_NIMActionPerformed(evt);
            }
        });

        TF_judul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_judulActionPerformed(evt);
            }
        });

        btnPinjam.setText("Pinjam");
        btnPinjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPinjamActionPerformed(evt);
            }
        });

        TB_pinjam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Judul", "Penulis", "Jumlah Buku", "Status"
            }
        ));
        jScrollPane1.setViewportView(TB_pinjam);

        gotomenu.setText("Menu");
        gotomenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotomenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(TF_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(TF_NIM, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TF_judul, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(btnPinjam))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(gotomenu)
                        .addGap(72, 72, 72)))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(62, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addComponent(TF_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TF_NIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TF_judul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPinjam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(gotomenu)
                        .addGap(41, 41, 41))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 814, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TF_namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_namaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_namaActionPerformed

    private void TF_NIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_NIMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_NIMActionPerformed

    private void TF_judulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_judulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_judulActionPerformed

    private void gotomenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotomenuActionPerformed
        // TODO add your handling code here:
        InterfaceUtama IU = new InterfaceUtama();
        IU.show();
        
        dispose();
    }//GEN-LAST:event_gotomenuActionPerformed

    private void btnPinjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPinjamActionPerformed
        // TODO add your handling code here:
        // Pinjam button click event

        String nama = TF_nama.getText();
        String nim = TF_NIM.getText();
        String judul = TF_judul.getText();
        java.sql.Date currentDate = new java.sql.Date(System.currentTimeMillis());

        // Check if the book with the given title exists in the table
        for (int i = 0; i < model.getRowCount(); i++) {
            if (judul.equals(model.getValueAt(i, 0))) {
                // If the book exists, decrease the quantity by 1
                int jumlahBuku = (int) model.getValueAt(i, 2);
                if (jumlahBuku > 0) {
                    model.setValueAt(jumlahBuku - 1, i, 2);
                    
                    updateBookQuantity(judul, jumlahBuku - 1);
                    displayData(); // Refresh the table to reflect changes
                    BuktiPinjam bp = new BuktiPinjam();
                    bp.setUserInfo(nama, nim);
                    bp.setPeminjamanInfo(judul, currentDate);
                    bp.setVisible(true);
                    saveToPeminjamanTable(nama, nim, judul, currentDate);
                } else {
                    // Handle the case when the book is out of stock
                    // You might want to show a message or perform other actions
                    System.out.println("Out of stock!");
                }
                return; // Exit the loop after processing the book
            }
        }

      
        System.out.println("Book not found!");
    }
    
    private void updateBookQuantity(String judul, int newQuantity) {
        String updateQuery = "UPDATE buku SET JumlahBuku = " + newQuantity + " WHERE Judul = '" + judul + "'";
        String updatestatus = "UPDATE buku SET Status = 'Tidak Ada' WHERE JumlahBuku = 0";
        String updateQuery2 = "UPDATE buku SET Status = 'Ada' WHERE JumlahBuku > 0 AND Status != 'Ada' ";
        try (
            Connection conn = dbConnection.getConnection();
            Statement stmt = conn.createStatement();
        ) {
            stmt.executeUpdate(updateQuery);
            stmt.executeUpdate(updatestatus);
            stmt.executeUpdate(updateQuery2);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    
    }//GEN-LAST:event_btnPinjamActionPerformed
    
    // Method to save data to the "peminjaman" table
    private void saveToPeminjamanTable(String nama, String nim, String judul, java.sql.Date currentDate) {
    // Calculate the return date (current date + 7 days)
    LocalDate returnDate = LocalDate.now().plusDays(7);
    java.sql.Date returnDateSql = java.sql.Date.valueOf(returnDate);

    String insertQuery = "INSERT INTO peminjaman (Nama, NIM, Judul, Tanggal, TanggalKembali) VALUES ('"
            + nama + "', '" + nim + "', '" + judul + "', '" + currentDate + "', '" + returnDateSql + "')";

    try (
            Connection conn = dbConnection.getConnection();
            Statement stmt = conn.createStatement();
        ) {
            stmt.executeUpdate(insertQuery);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfacePeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfacePeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfacePeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfacePeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfacePeminjaman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TB_pinjam;
    private javax.swing.JTextField TF_NIM;
    private javax.swing.JTextField TF_judul;
    private javax.swing.JTextField TF_nama;
    private javax.swing.JButton btnPinjam;
    private javax.swing.JButton gotomenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
