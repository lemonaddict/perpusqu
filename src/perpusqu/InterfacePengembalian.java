/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpusqu;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.util.concurrent.TimeUnit;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

// Abstract class for database connection
abstract class DatabaseConnection {
    static final String DB_URL = "jdbc:mysql://localhost:3306/perpusqu";
    static final String USER = "root";
    static final String PASSWORD = "";

    // Abstract method for getting a database connection
    abstract Connection getConnection() throws SQLException;
}

// Class that extends the abstract class and implements the getConnection method
class DatabaseConnector extends DatabaseConnection {
    @Override
    Connection getConnection() throws SQLException {
        return DriverManager.getConnection(DB_URL, USER, PASSWORD);
    }
}

public class InterfacePengembalian extends javax.swing.JFrame {

    private final DatabaseConnection dbConnection = new DatabaseConnector();
    static final String query = "SELECT * FROM peminjaman";
        
    DefaultTableModel model;
    
    String unama;
    String unim;
    public void setUserInfo(String nama, String nim) {
        
        this.unama = nama;
        this.unim = nim;
        TF_nama.setText(unama);
        TF_NIM.setText(unim);
    }
    
    public InterfacePengembalian() {
        initComponents();
        
        model = (DefaultTableModel) TB_kembali.getModel();
        displayPeminjamanTable();
        
        TB_kembali.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                int selectedRow = TB_kembali.getSelectedRow();
                if (selectedRow != -1) {
                    // Get data from the selected row
                    String nama = TB_kembali.getValueAt(selectedRow, 0).toString();
                    String nim = TB_kembali.getValueAt(selectedRow, 1).toString();
                    String judul = TB_kembali.getValueAt(selectedRow, 2).toString();

                    // Set the text fields with the selected data
                    TF_nama.setText(nama);
                    TF_NIM.setText(nim);
                    TF_judul.setText(judul);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TF_nama = new javax.swing.JTextField();
        TF_NIM = new javax.swing.JTextField();
        TF_judul = new javax.swing.JTextField();
        btnKembalikan = new javax.swing.JButton();
        gotomenu = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TB_kembali = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Nama");

        jLabel3.setText("NIM");

        jLabel4.setText("Judul Buku");

        btnKembalikan.setText("Kembalikan");
        btnKembalikan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembalikanActionPerformed(evt);
            }
        });

        gotomenu.setText("Menu");
        gotomenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotomenuActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jPanel2HierarchyChanged(evt);
            }
        });

        TB_kembali.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nama", "NIM", "Judul Buku", "Sisa Hari", "Denda"
            }
        ));
        jScrollPane1.setViewportView(TB_kembali);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("PENGEMBALIAN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(285, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gotomenu)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(TF_NIM, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF_judul, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKembalikan))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TF_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TF_NIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TF_judul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnKembalikan)
                .addGap(39, 39, 39)
                .addComponent(gotomenu)
                .addContainerGap(44, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void gotomenuActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        InterfaceUtama IU = new InterfaceUtama();
        IU.show();
        
        dispose();
    }                                        

    private void btnKembalikanActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        // Kembalikan button click event
        
        String nama = TF_nama.getText();
        String nim = TF_NIM.getText();
        String judul = TF_judul.getText();

        // Retrieve the current date
        java.util.Date currentDate = new java.util.Date();
        java.sql.Date sqlCurrentDate = new java.sql.Date(currentDate.getTime());
   
        // Get the borrow date from the peminjaman table
        java.sql.Date borrowDate = getBorrowDate(nama, nim, judul);

        // Calculate the difference in days
        long diffInMillies = Math.abs(currentDate.getTime() - borrowDate.getTime());
        long diff = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);

        // Calculate the remaining days
        long remainingDays = 7 - diff;
        
        updatePeminjamanTable(nama, nim, judul, sqlCurrentDate, remainingDays);
        displayPeminjamanTable();
        updateBukuTable(judul);
    }                                             

    // Method to get the borrow date from the peminjaman table
    private java.sql.Date getBorrowDate(String nama, String nim, String judul) {
        String selectQuery = "SELECT Tanggal FROM peminjaman WHERE Nama = '" + nama
                + "' AND NIM = '" + nim + "' AND Judul = '" + judul + "'";

        try (
            Connection conn = dbConnection.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(selectQuery);
        ) {
            if (rs.next()) {
                return rs.getDate("Tanggal");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    // Method to update the peminjaman table
    private void updatePeminjamanTable(String nama, String nim, String judul,java.sql.Date returnDate, long remainingDays) {

    String deleteQuery = "DELETE FROM peminjaman WHERE Nama = ? AND NIM = ? AND Judul = ?";

    try (
        Connection conn = dbConnection.getConnection();

        PreparedStatement deleteStmt = conn.prepareStatement(deleteQuery);
    ) {
        

        // Set parameters for the delete statement
        deleteStmt.setString(1, nama);
        deleteStmt.setString(2, nim);
        deleteStmt.setString(3, judul);

        conn.setAutoCommit(false); // Start a transaction
       
        deleteStmt.executeUpdate();
        conn.commit(); // Commit the transaction
        System.out.println("Data updated and deleted in peminjaman table!");
    } catch (SQLException e) {
        e.printStackTrace();
    }
    }
    
    private void updateBukuTable(String judul) {
        String updateQuery = "UPDATE buku SET Status = 'Ada' WHERE JumlahBuku > 0 AND Status != 'Ada' ";
        String updateQuery2 = "UPDATE buku SET JumlahBuku = JumlahBuku + 1 WHERE Judul = '" + judul + "'";  

        try (
            Connection conn = dbConnection.getConnection();
            Statement stmt = conn.createStatement();
        ) {
            // Execute the update statement
            int rowsAffected = stmt.executeUpdate(updateQuery);
            stmt.executeUpdate(updateQuery2);
            if (rowsAffected > 0) {
                System.out.println("Buku table updated: Status set to 'Ada' for books with quantity > 0.");
            } else {
                System.out.println("No update needed in Buku table.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Method to display data in the peminjaman table
    private void displayPeminjamanTable() {
        DefaultTableModel model = (DefaultTableModel) TB_kembali.getModel();
    model.setRowCount(0);

    String selectQuery = "SELECT Nama, NIM, Judul, TanggalKembali, DATEDIFF(TanggalKembali, CURDATE()) AS Sisa FROM peminjaman";

    try (
        Connection conn = dbConnection.getConnection();
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(selectQuery);
    ) {
        while (rs.next()) {
            int sisa = rs.getInt("Sisa");
            int denda = (sisa < 0) ? 30000 : 0;
            
            model.addRow(new Object[]{
                rs.getString("Nama"),
                rs.getString("NIM"),
                rs.getString("Judul"),
                rs.getInt("Sisa"),
                denda
            });
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    }                                             

    private void jPanel2HierarchyChanged(java.awt.event.HierarchyEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfacePengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfacePengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfacePengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfacePengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfacePengembalian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTable TB_kembali;
    private javax.swing.JTextField TF_NIM;
    private javax.swing.JTextField TF_judul;
    private javax.swing.JTextField TF_nama;
    private javax.swing.JButton btnKembalikan;
    private javax.swing.JButton gotomenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   
}

   
 
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
